<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qzx.secondhand.mapper.TradeCollectionMapper">
  <resultMap id="BaseResultMap" type="com.qzx.secondhand.model.domain.TradeCollection">
    <!--@mbg.generated-->
    <!--@Table trade_collection-->
    <id column="collection_id" jdbcType="BIGINT" property="collectionId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="commodity_id" jdbcType="BIGINT" property="commodityId" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    collection_id, user_id, commodity_id, gmt_create, gmt_modified
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from trade_collection
    where collection_id = #{collectionId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from trade_collection
    where collection_id = #{collectionId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="collection_id" keyProperty="collectionId" parameterType="com.qzx.secondhand.model.domain.TradeCollection" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into trade_collection (user_id, commodity_id, gmt_create, 
      gmt_modified)
    values (#{userId,jdbcType=BIGINT}, #{commodityId,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="collection_id" keyProperty="collectionId" parameterType="com.qzx.secondhand.model.domain.TradeCollection" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into trade_collection
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="commodityId != null">
        commodity_id,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="commodityId != null">
        #{commodityId,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qzx.secondhand.model.domain.TradeCollection">
    <!--@mbg.generated-->
    update trade_collection
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="commodityId != null">
        commodity_id = #{commodityId,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where collection_id = #{collectionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qzx.secondhand.model.domain.TradeCollection">
    <!--@mbg.generated-->
    update trade_collection
    set user_id = #{userId,jdbcType=BIGINT},
      commodity_id = #{commodityId,jdbcType=BIGINT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where collection_id = #{collectionId,jdbcType=BIGINT}
  </update>


  <resultMap id="CollectionVoJoin" type="com.qzx.secondhand.model.vo.user.CollectionVO">
    <result column="commodity_id" property="commodityId"/>
    <result column="commodity_name" property="commodityName"/>
    <result column="commodity_publisher_id" property="commodityPublisherId"/>
    <result column="user_name" property="userName"/>
    <result column="user_avatar" property="userAvatar"/>
    <result column="user_phone_number" property="userPhoneNumber"/>
    <result column="user_wx_number" property="userWxNumber"/>
    <result column="commodity_type" property="commodityType"/>
    <result column="commodity_exchange_name" property="commodityExchangeName"/>
    <result column="commodity_price" property="commodityPrice"/>
    <result column="commodity_state" property="commodityState"/>
    <result column="commodity_release_time" property="commodityReleaseTime"/>
    <result column="commodity_avatar" property="commodityAvatar"/>
    <result column="commodity_description" property="commodityDescription"/>
    <result column="commodity_scan_count" property="commodityScanCount"/>
    <result column="commodity_classification" property="commodityClassification"/>
    <result column="classification_name" property="classificationName"/>
    <result column="commodity_second_classification" property="commoditySecondClassification"/>
    <result column="classification_second_name" property="classificationSecondName"/>
    <result column="commodity_address" property="commodityAddress"/>
  </resultMap>

  <select id="selectCollectionVoJoin" resultMap="CollectionVoJoin">
    select
    a3.classification_name,a3.classification_second_name,
    a2.commodity_id,a2.commodity_name,a2.commodity_publisher_id,a2.commodity_type,a2.commodity_exchange_name,a2.commodity_price,
    a2.commodity_state,a2.commodity_release_time,a2.commodity_avatar,
    a2.commodity_description,a2.commodity_scan_count,
    a2.commodity_address,a2.commodity_classification,a2.commodity_second_classification,
    a4.user_id,a4.user_name,
    a4.user_wx_number,a4.user_phone_number,a4.user_avatar

    from trade_collection as a1
    left join trade_commodity as a2 on a2.commodity_id = a1.commodity_id
    left join trade_commodity_classification as a3 on a2.commodity_second_classification=a3.classification_second_id
    left join trade_user as a4 on a4.user_id = a2.commodity_publisher_id
    where a1.user_id = #{id}
    order by a1.gmt_create desc
  </select>
</mapper>